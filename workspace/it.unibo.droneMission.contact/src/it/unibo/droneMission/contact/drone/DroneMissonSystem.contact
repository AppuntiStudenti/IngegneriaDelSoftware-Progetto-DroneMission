ContactSystem DroneMissionSystem -awt -o;

//		Subsystems -w (window)
Subject smartphone -w;
Subject drone -w;
Subject headQuarter -w;


//		Messages
Dispatch photo;
Invitation command;
Signal dataSensor;
Signal notifyStartMission;


//		Highlevel communications
//Drone send photo
sendPhoto: drone forward photo to headQuarter;  
//Headquarter receive photo
receivePhoto: headQuarter serve photo support=TCP [host="localhost" port=4040];

//Drone send data of sensors
sendDataSensor: drone emit dataSensor;
//Headquarter and Smartphone receive data of sensors
headquarterReceiveDataSensor: headQuarter sense dataSensor;
smartphoneReceiveDataSensor: smartphone sense dataSensor;

//Drone send startMission
sendNotifyStartMission: drone emit notifyStartMission;
//Smartphone receive notification of start mission
smartphoneReceiveNotifyStartMission: smartphone sense notifyStartMission;

//HeadQuarter send command
sendCommand: headQuarter ask command to drone;
//Drone receive command
receiveCommand: drone accept command support=TCP [host="localhost" port=4050];


//		Behaviors 
//Behavior of Drone
BehaviorOf drone {
	var String strPhoto = "" 
	var String msgCommand = ""
	var String cmdName = ""
	var String cmdValue = ""
	var boolean start
	var boolean stop

	state state_initDrone initial
		println ("----- Drone Initialized -----")
		goToState state_ready
	endstate
	
	state state_ready
		println ("----- Waiting setSpeed -----")
		doIn receiveCommand()
		set msgCommand = call curInputMsg.msgContent()
		set cmdName = call Drone.getCommandName(msgCommand)
		set start = call cmdName.contains("setspeed")
		if{start} {
			set cmdValue = call Drone.getCommandValue(msgCommand)
			//showMsg("----- Speed set ----- ")
			//call startMission(cmdValue)
			goToState state_onMission
		}
	endstate
	
	state state_onMission
	endstate
}

BehaviorOf headQuarter{
	state state_initHeadQuarter initial
		println ("----- HeadQuarter Initialized -----") 
		goToState state_operative
	endstate
	
	state state_operative
		println ("----- Ready to send command -----")
		doOutIn sendCommand("setspeed 60")
		acquireAckFor command goToState state_mission
	endstate
	
	state state_mission
		
	endstate
}

BehaviorOf smartphone {
	state state_initSmartphone initial
		transitToEnd
	endstate
}
